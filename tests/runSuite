#!/bin/bash
cd `dirname "$0"`;
if [ ${#} -lt 2 ]; then
    prog=`find -maxdepth 1 ! -type d -executable ! -name 'runSuite'`
    echo "No program file argument. Using '${prog}' as the program. " >&2
else
    prog="${2}"
fi
errorNum=0
checkedSuites=0
rm 'stderr.txt'
testCaseList=`find -name *.in`
while read testCase; do
    testCase=${testCase%.in}
    if [ "`egrep \"#\" <<< \"${testCase}\"`" ]; then continue; fi
    if [ ! -r "${testCase}.out" ]; then
        echo "Missing or unreadable \"${testCase}.out\" file" >&2
        exit 2
    fi
    if [ -r "${testCase}.args" ]; then
        result="$(xargs -a \"${testCase}.args\" \"${prog}\" < \"${testCase}.in\" 2>>'stderr.txt')"
    else
        input=`cat "${testCase}.in"`
        result="`\"${prog}\" <<< \"${input/../${testCase}.txt}\" 2>>'stderr.txt'`"
    fi
    expected="`cat \"${testCase}.out\"`"
    if [ "${result}" != "${expected}" ]; then
        echo
        echo "****************************************"
        echo "****************************************" >> 'stderr.txt';
        ((errorNum++))
        failed+="\"${testCase}\"\n"
        tput setaf 1
        echo "Test failed: ${testCase}"
        echo "Test failed: ${testCase}" >> 'stderr.txt';
        tput setaf 0
        echo "Argument:"
        if [ -r "${testCase}.args" ]; then echo $(cat "${testCase}.args") else echo None; fi
        echo "Input:"
        echo ${input}
        echo ""
        tput setaf 2
        echo "Expected:"
        tput setaf 0
        echo "${expected}"
        echo ""
        tput setaf 1
        echo "Actual:"
        tput setaf 0
        echo "${result}"
        result_no_space="`tr -d ' ' <<< \"${result}\"`"
        expected_no_space="`tr -d ' ' <<< \"${expected}\"`"
        if [ "${result_no_space}" == "${expected_no_space}" ]; then echo -e "\n(Check whitespaces)"; fi
    else 
        passed+="\"${testCase}\"\n"
    fi
    ((checkedSuites++))
done <<< "${testCaseList}"
echo
echo "****************************************"
echo -e "Passed:\n${passed}"
echo -e "Failed:\n`tput setaf 1`${failed}"
tput setaf 0
echo "Checked suites: ${checkedSuites}, errors: `tput setaf 1`${errorNum}"
tput setaf 0
